{"version":3,"sources":["components/CopyComponent.js","components/CreatePoll.js","components/Progress.js","components/Poll.js","components/Admin.js","App.js","reportWebVitals.js","index.js"],"names":["CopyComponent","props","useState","copy","setCopy","OutlinedInput","disabled","endAdornment","InputAdornment","position","IconButton","onClick","navigator","clipboard","writeText","link","edge","label","value","Alert","forwardRef","ref","elevation","variant","CreatePoll","poll","setPoll","options","setOptions","title","setTitle","uuidv4","id","admin","open","setOpen","snackbar","setSnackbar","history","useHistory","handleClose","push","Box","sx","m","className","Card","Fab","color","component","class","TextField","required","placeholder","fullWidth","margin","onChange","e","target","multiline","rows","map","val","index","handleChange","size","fontSize","filter","Button","type","preventDefault","empty","forEach","votes","firebase","firestore","collection","doc","set","then","res","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","window","location","href","DialogActions","Snackbar","autoHideDuration","severity","width","LinearProgressWithLabel","display","alignItems","mr","LinearProgress","minWidth","Typography","Math","round","Poll","useParams","undefined","setValue","docRef","setDocRef","localStorage","getItem","submit","setSubmit","setVotes","total","setTotal","calculateVotes","sum","Object","getOwnPropertyNames","useEffect","where","get","snapshot","data","onSnapshot","style","marginLeft","FormControl","RadioGroup","defaultValue","name","floor","FormControlLabel","control","Radio","setItem","runTransaction","transaction","a","update","Admin","publicId","setPublic","host","App","anchor","drawer","toggleDrawer","AppBar","Toolbar","Drawer","role","List","text","ListItem","button","ListItemText","primary","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","default","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3834c0d1.chunk.js","sourcesContent":["import {useState} from 'react'\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport CopyIcon from '@mui/icons-material/CopyAll'\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CheckIcon from '@mui/icons-material/Check'\r\n\r\nexport default function CopyComponent(props) {\r\n    const [copy,setCopy] = useState(false)\r\n    const handleCopy = () => {\r\n        setCopy(true)\r\n        if(navigator.clipboard)\r\n        navigator.clipboard.writeText(props.link)\r\n    }\r\n    return (\r\n        <OutlinedInput\r\n            disabled={true}\r\n            endAdornment={\r\n            <InputAdornment position=\"end\">\r\n                <IconButton\r\n                onClick={handleCopy}\r\n                edge=\"end\"\r\n                >\r\n                {copy ? <CheckIcon /> : <CopyIcon />}\r\n                </IconButton>\r\n            </InputAdornment>\r\n            }\r\n            label=\"Public Link\"\r\n            value={props.link}\r\n        />\r\n    )\r\n}","import Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Card from '@mui/material/Card';\r\nimport Box from '@mui/material/Box';\r\nimport {useState,forwardRef} from 'react'\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\nimport CopyComponent from './CopyComponent';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nconst Alert = forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport default function CreatePoll() {\r\n    let [poll,setPoll] = useState(true)\r\n    let [options,setOptions] = useState([\"\",\"\"])\r\n    let [title,setTitle] = useState(\"\")\r\n    let [id,setId] = useState(uuidv4())\r\n    let [admin,setAdmin] = useState(uuidv4())\r\n    const [open, setOpen] = useState(false);\r\n    const [snackbar,setSnackbar] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        history.push(`/edit/${admin}`)\r\n\r\n    };\r\n\r\n    const handleChange = (e,id) => {\r\n        setOptions((options) => {\r\n            return options.map((val,index) => {\r\n                if(id === index) return e.target.value\r\n                return val\r\n            })\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let empty = false\r\n        options.forEach((val) => {\r\n            if(val === \"\") empty = true\r\n        })\r\n        if (title === \"\" || empty) {\r\n            setSnackbar(true)\r\n            return\r\n        }\r\n        let votes = {}\r\n        options.forEach((val,index) => {\r\n            votes[index] = 0\r\n        })\r\n        firebase.firestore().collection('Poll').doc().set({\r\n            title,\r\n            options,\r\n            admin,\r\n            id,\r\n            votes\r\n        })\r\n        .then((res) => {\r\n            setOpen(true)\r\n        })\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {poll\r\n                ?<Box sx={{ '& > :not(style)': { m: 1 } }} className=\"mid\">\r\n                    <Card variant=\"outlined\">\r\n                        <div>\r\n                            <Fab color=\"primary\" aria-label=\"add\" onClick={() => {setPoll(false)}}>\r\n                                <AddIcon />\r\n                            </Fab>\r\n                        </div>\r\n                        <div>\r\n                            <h1>Create a Poll</h1>\r\n                        </div>\r\n                    </Card>\r\n                </Box>\r\n                :   <Box className=\"partial-width\" component=\"form\">\r\n                        {/* <h1>Create Your Poll</h1> */}\r\n                        <h3>What would you like to ask?</h3>\r\n                        <div class=\"\">\r\n                        <TextField\r\n                            required\r\n                            id=\"title\"\r\n                            label=\"Type your Question\"\r\n                            placeholder=\"Poll Title\"\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            onChange = {(e) => {setTitle(e.target.value)}}\r\n                            className=\"wide\"\r\n                            multiline\r\n                            rows={4}\r\n                        />\r\n                        <h3>Fill in your Options</h3>\r\n                        {\r\n                            options.map((val,index) => {\r\n                                return (\r\n                                    <div className=\"flex-row\">\r\n                                    <h3><br/>{index+1}:</h3>\r\n                                    <TextField\r\n                                        required\r\n                                        id={`option-${index+1}`}\r\n                                        label={`option ${index+1}`}\r\n                                        placeholder={`option ${val}`}\r\n                                        margin=\"normal\"\r\n                                        onChange = {(e) => {handleChange(e,index)}}\r\n                                        className=\"long\"\r\n                                    />\r\n                                    <div><br/>\r\n                                        <Fab color=\"primary\" aria-label=\"add\" onClick={() => {setPoll(false)}} size=\"small\">\r\n                                            <DeleteIcon fontSize=\"small\" onClick={(e) => {setOptions(options.filter((value,id) => id!==index))}}/>\r\n                                        </Fab>\r\n                                    </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        <br/>\r\n                        <div className=\"mid\">\r\n                            <Fab color=\"primary\" aria-label=\"add\" onClick={() => {setOptions([...options,\"\"])}}>\r\n                                <AddIcon />\r\n                            </Fab>\r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"mid\">\r\n                        <Button type=\"submit\" onClick={handleSubmit} className=\"mid\"><h3>Create Poll</h3></Button>\r\n                        </div>\r\n                        </div>\r\n                        <Dialog open={open} onClose={handleClose}>\r\n                            <DialogTitle>Poll Created</DialogTitle>\r\n                            <DialogContent>\r\n                            <DialogContentText>\r\n                                Admin Link:<br/>\r\n                                <CopyComponent link={window.location.href+'edit/'+admin}/>\r\n                                <br/>\r\n                                <span className=\"small\">*Do not share this link with anyone*</span>\r\n                                <br/>\r\n                                <br/>\r\n                                <br/>\r\n                                Public Link:<br/>\r\n                                <CopyComponent link={window.location.href+id}/>\r\n                                <br/>\r\n                                <span className=\"small\">*The links might not get copied on pressing the copy button on some browsers*</span>\r\n                            </DialogContentText>\r\n                            </DialogContent>\r\n                            <DialogActions>\r\n                            <Button onClick={handleClose}>Cancel</Button>\r\n                            <Button onClick={handleClose}>OK</Button>\r\n                            </DialogActions>\r\n                        </Dialog>\r\n                        <Snackbar open={snackbar} autoHideDuration={6000} onClose={() => {setSnackbar(false)}}>\r\n                            <Alert onClose={() => {setSnackbar(false)}} severity=\"warning\" sx={{ width: '100%' }}>\r\n                                Please fill all the inputs\r\n                            </Alert>\r\n                        </Snackbar>\r\n                    </Box>\r\n            }\r\n        </div>\r\n    )\r\n} ","import LinearProgress from '@mui/material/LinearProgress';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport default function LinearProgressWithLabel(props) {\r\n    return (\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ width: '100%', mr: 1 }}>\r\n          <LinearProgress variant=\"determinate\" {...props}/>\r\n        </Box>\r\n        <Box sx={{ minWidth: 35 }}>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">{`${Math.round(\r\n            props.value,\r\n          )}%`}</Typography>\r\n        </Box>\r\n      </Box>\r\n    );\r\n}\r\n\r\n\r\n  ","import {useState, useEffect, forwardRef} from 'react'\r\nimport Button from '@mui/material/Button';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nimport Progress from './Progress'\r\n\r\nconst Alert = forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport default function Poll(props) {\r\n\r\n    const [title,setTitle] = useState(\"\")\r\n    const [options,setOptions] = useState([])\r\n    const { id } = useParams()\r\n    const [value,setValue] = useState(undefined)\r\n    const [snackbar,setSnackbar] = useState(false)\r\n    const [docRef,setDocRef] = useState(undefined)\r\n    const [submit,setSubmit] = useState(localStorage.getItem(id)?true:false)\r\n    const [votes,setVotes] = useState([])\r\n    const [total,setTotal] = useState(0) \r\n\r\n    const handleRadioChange = (e) => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    const realtime = () => {\r\n        firebase.firestore().collection(\"Poll\").onSnapshot((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n                if(doc.data().id === id) {\r\n                    setVotes(doc.data().votes)\r\n                    setTitle(doc.data().title)\r\n                    setOptions(doc.data().options)\r\n                    calculateVotes(doc.data().votes)\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if(value === undefined) {\r\n            setSnackbar(true)\r\n            return\r\n        }\r\n        setSubmit(true)\r\n        localStorage.setItem(id,true)\r\n        if(docRef === undefined) return\r\n        firebase.firestore().runTransaction(async (transaction) => {\r\n            const val = await firebase.firestore().collection(\"Poll\").doc(docRef).get()\r\n            let votes = val.data().votes\r\n            votes[value] = votes[value] + 1\r\n            transaction.update(firebase.firestore().collection(\"Poll\").doc(docRef),{votes: votes})\r\n            // realtime()\r\n        })\r\n\r\n    }\r\n\r\n    const calculateVotes = (votes) => {\r\n        if(votes){\r\n            let sum = 0\r\n            Object.getOwnPropertyNames(votes).forEach((val) => {\r\n                sum+=votes[val]\r\n            })\r\n\r\n            setTotal(sum)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        firebase.firestore().collection(\"Poll\")\r\n        .where(\"id\",\"==\",id)\r\n        .get()\r\n        .then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n                setDocRef(doc.id)\r\n                setTitle(doc.data().title)\r\n                setOptions(doc.data().options)\r\n                setVotes(doc.data().votes)\r\n                calculateVotes(doc.data().votes)\r\n                realtime()\r\n            });\r\n        })\r\n    },[submit])\r\n\r\n    return (\r\n        <div className=\"flex-col\">\r\n            <br/>\r\n            <div className=\"card long mid\" style={{marginLeft: '7%'}}><h1>{title} {submit?<span>({total})</span>:''}</h1></div><br/>\r\n            <FormControl component=\"fieldset\" className=\"long\">\r\n                <RadioGroup\r\n                    aria-label=\"gender\"\r\n                    defaultValue=\"female\"\r\n                    name=\"radio-buttons-group\"\r\n                    onChange={handleRadioChange}\r\n                >\r\n                    {\r\n                        options.map((val,index) => {\r\n                            return submit?<div><div className=\"card flex-col\" style={{marginLeft: '20%'}}>{val} ({votes[index]}):<Progress value={(Math.floor(votes[`${index}`])/total)*100 | 0}/><br/></div><br/></div>:<div><div className=\"card flex-col\" style={{marginLeft: '20%'}}><FormControlLabel value={index} control={<Radio />} label={val} key={index} id={index}/></div><br/></div>\r\n                        })\r\n                    }\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <br/>\r\n            {\r\n                submit\r\n                ?<div></div>\r\n                :<Button onClick={handleSubmit}>Submit</Button>\r\n            }\r\n            <Snackbar open={snackbar} autoHideDuration={6000} onClose={() => {setSnackbar(false)}}>\r\n                <Alert onClose={() => {setSnackbar(false)}} severity=\"warning\" sx={{ width: '100%' }}>\r\n                    {submit?'The page has been updated, refresh to see the changes!':'Please select an option'}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n    \r\n} ","// import { useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport Fab from '@mui/material/Fab';\r\nimport Box from '@mui/material/Box';\r\nimport {useState, useEffect, forwardRef} from 'react'\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\n\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\nimport CopyComponent from './CopyComponent';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nconst Alert = forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport default function Admin(props) {\r\n    const [title,setTitle] = useState(\"\")\r\n    const [options,setOptions] = useState([])\r\n    const { id } = useParams()\r\n    const [snackbar,setSnackbar] = useState(false)\r\n    const [docRef,setDocRef] = useState(undefined)\r\n    const admin = id\r\n    const [publicId, setPublic] = useState(undefined)\r\n\r\n    const handleChange = (e,id) => {\r\n        setOptions((options) => {\r\n            return options.map((val,index) => {\r\n                if(id === index) return e.target.value\r\n                return val\r\n            })\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        let empty = false\r\n        options.forEach((val) => {\r\n            if(val === \"\") empty = true\r\n        })\r\n        if (title === \"\" || empty) {\r\n            setSnackbar(true)\r\n            return\r\n        }\r\n        let votes = {}\r\n        options.forEach((val,index) => {\r\n            votes[index] = 0\r\n        })\r\n        firebase.firestore().runTransaction(async (transaction) => {\r\n            transaction.update(firebase.firestore().collection(\"Poll\").doc(docRef),{\r\n                title,\r\n                options\r\n            })\r\n            // realtime()\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        firebase.firestore().collection(\"Poll\")\r\n        .where(\"admin\",\"==\",id)\r\n        .get()\r\n        .then((snapshot) => {\r\n            snapshot.forEach((doc) => {\r\n                setDocRef(doc.id)\r\n                setTitle(doc.data().title)\r\n                setOptions(doc.data().options)\r\n                setPublic(doc.data().id)\r\n            });\r\n        })\r\n    },[])\r\n\r\n    return (\r\n        <Box>\r\n            <Box className=\"partial-width\" component=\"form\">\r\n            <h1>Admin Page</h1>\r\n            <div>\r\n               <div> Public Link: <br/><CopyComponent link={window.location.host+'/'+publicId}/></div>\r\n            </div>\r\n                <h3>Poll Question</h3>\r\n                <div class=\"\">\r\n                <TextField\r\n                    required\r\n                    id=\"title\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    onChange = {(e) => {setTitle(e.target.value)}}\r\n                    className=\"wide\"\r\n                    value={title}\r\n                    multiline\r\n                    rows={4}\r\n                />\r\n                <h3>Options</h3>\r\n                {\r\n                    options.map((val,index) => {\r\n                        return (\r\n                            <div className=\"flex-row\">\r\n                            <h3><br/>{index+1}:</h3>\r\n                            <TextField\r\n                                required\r\n                                id={`option-${index+1}`}\r\n                                margin=\"normal\"\r\n                                onChange = {(e) => {handleChange(e,index)}}\r\n                                className=\"long\"\r\n                                value={val}\r\n                            />\r\n                            <div><br/>\r\n                                <Fab color=\"primary\" aria-label=\"add\" onClick={() => {}} size=\"small\">\r\n                                    <DeleteIcon fontSize=\"small\" onClick={(e) => {setOptions(options.filter((value,id) => id!==index))}}/>\r\n                                </Fab>\r\n                            </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <br/>\r\n \r\n                <br/>\r\n                <Button type=\"submit\" onClick={handleSubmit} ><h3>Update Poll</h3></Button>\r\n                </div>\r\n                <Snackbar open={snackbar} autoHideDuration={6000} onClose={() => {setSnackbar(false)}}>\r\n                    <Alert onClose={() => {setSnackbar(false)}} severity=\"success\" sx={{ width: '100%' }}>\r\n                        Poll Updated!\r\n                    </Alert>\r\n                </Snackbar>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","import './App.css';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Drawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport { createTheme } from '@mui/system';\n\nimport {useState} from 'react'\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\nimport CreatePoll from './components/CreatePoll'\nimport Poll from './components/Poll';\nimport Admin from './components/Admin';\n\nfunction App() {\n  const [drawer,toggleDrawer] = useState(false)\n  const DrawerList = (anchor) => (\n    <Box\n      sx={{ width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 250 }}\n      role=\"presentation\"\n      // onClick={toggleDrawer(false)}\n      // onKeyDown={toggleDrawer(false)}\n    >\n      <List>\n        {['About Ayas', 'About Poll', 'Contact Me', 'Download Resume'].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemText primary={text} />\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2}} onClick={() => {toggleDrawer(true)}}>\n            <MenuIcon />\n          </IconButton>\n          {/* <Typography variant=\"h6\" color=\"inherit\" component=\"div\"> */}\n            <h1>Async Poll: Quick and Realtime</h1>\n          {/* </Typography> */}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        anchor={'left'}\n        open={drawer}\n        onClose={() => {toggleDrawer(false)}}\n      >{DrawerList('left')}</Drawer>\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact ><CreatePoll/></Route>\n          <Route path=\"/edit/:id\" ><Admin/></Route>\n          <Route path=\"/:id\" ><Poll/></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\n\nconst firebaseConfig = {\n  // Fill up the config to run the app\n  apiKey: \"AIzaSyBAZXYH_CcCbyqTGnLLfVFXqyyXXu7Q97U\",\n  authDomain: \"cl-5b1fd.firebaseapp.com\",\n  projectId: \"cl-5b1fd\",\n  storageBucket: \"cl-5b1fd.appspot.com\",\n  messagingSenderId: \"1091320665139\",\n  appId: \"1:1091320665139:web:fb9a4d94c9eb3b31f7ff46\",\n  measurementId: \"G-J2DWHSK673\"\n};\n\nfirebase.default.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}